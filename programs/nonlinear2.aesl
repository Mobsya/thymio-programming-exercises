<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->


<!--show keywords state-->
<keywords flag="false"/>


<!--node thymio-II-->
<node nodeId="62941" name="thymio-II"># Thymio-II program: calibrating a nonlinear sensor
# Copyright 2013 by Moti Ben-Ari
# CreativeCommons BY-SA 3.0

# The array contains the values of the horizontal proximity
#   sensor for an object at 1 .. 7 centimetrs
# -1 is a sentinel to stop the search when the sensor returns 0
var proximity[] = [4100, 4045, 3650, 2705, 1850, 1245, 965, -1]
var distance = 1 # The distance corresponding to the value

call leds.circle(0,0,0,0,0,0,0,0)

# Set the circle leds to indicate the distance
#   Use 31 instead of 32 so as not to overflow
sub set_circle_leds
  call leds.circle(
    (distance/1)*31, (distance/2)*31, (distance/3)*31, (distance/4)*31,
    (distance/5)*31, (distance/6)*31, (distance/7)*31, (distance/8)*31)

# When the center button is released,
#   search the array until a value is found
#   that is not greater than the measured value
#   of the horizontal sensor
# Call set_circle_leds to display the distance
onevent button.center
  if  button.center == 0 then
    distance = 0
    while proximity[distance] > prox.horizontal[2] do
      distance++
    end
    callsub set_circle_leds
  end

onevent button.backward
  if  button.backward == 0 then
    call leds.circle(0,0,0,0,0,0,0,0)
  end
</node>


</network>
